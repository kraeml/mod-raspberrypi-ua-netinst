#! /bin/busybox sh
# post-install.txt
# finish set-up of basic server


#####################
#### PREPARATION ####
#####################

# This is where we setup variables and stuff that we need later in the script

USER=$username
USRHOME="home/"$USER
RMTPATH=$hostname/$USRHOME


######################
#### SYSTEM SETUP ####
######################

# Here we setup the generic system. Stuff that's needed to get a basic RPI up
# and running stable.

# For the paranoid:
# Here we regenerate all the host SSH keys
rm /rootfs/etc/ssh/ssh_host_*
chroot /rootfs /usr/bin/ssh-keygen -N "" -t rsa   -b 4096 -f /etc/ssh/ssh_host_rsa_key
chroot /rootfs /usr/bin/ssh-keygen -N "" -t dsa   -b 1024 -f /etc/ssh/ssh_host_dsa_key
chroot /rootfs /usr/bin/ssh-keygen -N "" -t ecdsa -b 521  -f /etc/ssh/ssh_host_ecdsa_key
chroot /rootfs /usr/bin/ssh-keygen -N "" -t ed25519       -f /etc/ssh/ssh_host_ed25519_key

echo "Preparing /etc/hosts file..."
echo ""
echo "# Added by post-install:"
echo "::1             localhost ip6-localhost ip6-loopback" >> /rootfs/etc/hosts
echo "fe00::0         ip6-localnet"     >> /rootfs/etc/hosts
echo "ff00::0         ip6-mcastprefix"  >> /rootfs/etc/hosts
echo "ff02::1         ip6-allnodes"     >> /rootfs/etc/hosts
echo "ff02::2         ip6-allrouters"   >> /rootfs/etc/hosts

echo "Creating extra mountpoints..."
mkdir -p /rootfs/mnt/share1
mkdir -p /rootfs/mnt/backup
mkdir -p /rootfs/home/pi/bin

# disable default /tmp mount
sed -i "s/tmpfs \/tmp/#&/" /rootfs/etc/fstab
echo "" >> /rootfs/etc/fstab
echo "# Added by post-install:" >> /rootfs/etc/fstab
# use our own /tmp mount definition
echo "tmpfs /tmp tmpfs defaults,nodev,nosuid,size=80% 0 0" >> /rootfs/etc/fstab
echo "boson.lan:/srv/array1/backup    /mnt/backup nfs4 nouser,atime,rw,dev,exec,suid,intr,_netdev,noauto 0   0" >> /rootfs/etc/fstab
echo "boson.lan:/srv/array1/rbin/rpi  /home/pi/bin nfs4 nouser,atime,rw,dev,exec,suid,intr,_netdev,x-systemd.automount,noauto  0   0" >> /rootfs/etc/fstab

echo "."


####################
#### USER SETUP ####
####################

# Here we setup the generic user `pi` and the luser environment.

# SSH
if [ ! -d /rootfs/$USRHOME/.ssh ]; then
  echo "Create ~/.ssh folder..."
  mkdir -m 0700 -p /rootfs/$USRHOME/.ssh
fi

# GIT
echo "Set-up raspboot..."
mkdir -p /rootfs/$USRHOME/raspboot
echo "  Pull sources from github..."
chroot /rootfs /usr/bin/git clone -b master https://github.com/Mausy5043/raspboot.git /$USRHOME/raspboot
echo "master" > /rootfs/$USRHOME/.raspboot.branch
echo "  Set permissions..."
chmod -R 0755 /rootfs/$USRHOME/raspboot

# echo "Change ownership of files in $USRHOME..."
chroot /rootfs /bin/chown -R $USER:$USER /$USRHOME

######################
#### SERVER SETUP ####
######################

# This is where specifics for the server are setup
# Install CPU governor
chroot /rootfs /usr/sbin/update-rc.d switch_cpu_governor defaults


####################
#### FINALISING ####
####################

echo -n "********** SYSTEM READY **********"

date
# put the logfile somewhere we can find it, so we can mount /var/log with tmpfs
sync; sync
LOGTARGET=$USRHOME/installer.log
cp $LOGFILE /rootfs/$LOGTARGET
chmod 0644  /rootfs/$LOGTARGET
chroot /rootfs /bin/chown $USER:$USER /$LOGTARGET
